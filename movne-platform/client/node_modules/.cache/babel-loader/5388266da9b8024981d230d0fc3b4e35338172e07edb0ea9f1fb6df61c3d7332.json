{"ast":null,"code":"var _jsxFileName = \"/workspaces/movne-platform/movne-platform/client/src/RealTimeTranscriptLive.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './RealTimeTranscript.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RealTimeTranscript({\n  onTranscriptUpdate\n}) {\n  _s();\n  const [transcript, setTranscript] = useState('');\n  const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n  useEffect(() => {\n    if (!SpeechRecognition) {\n      console.warn(\"Web Speech API is not supported in this browser.\");\n      return;\n    }\n    const recognition = new SpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = 'he-IL';\n    recognition.onresult = event => {\n      let interimTranscript = '';\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const result = event.results[i];\n        interimTranscript += result[0].transcript;\n      }\n      setTranscript(interimTranscript);\n      if (onTranscriptUpdate) {\n        onTranscriptUpdate(interimTranscript);\n      }\n    };\n    recognition.onerror = err => {\n      console.error(\"Speech recognition error:\", err);\n    };\n    recognition.start();\n    return () => recognition.stop();\n  }, [onTranscriptUpdate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"real-time-transcript\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u05EA\\u05DE\\u05DC\\u05D5\\u05DC \\u05D1\\u05E9\\u05D9\\u05D3\\u05D5\\u05E8 \\u05D7\\u05D9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: transcript\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(RealTimeTranscript, \"o++wQ7V3d3/Fw4s0DQXjdpYxrK0=\");\n_c = RealTimeTranscript;\nexport default RealTimeTranscript;\nvar _c;\n$RefreshReg$(_c, \"RealTimeTranscript\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","RealTimeTranscript","onTranscriptUpdate","_s","transcript","setTranscript","SpeechRecognition","window","webkitSpeechRecognition","console","warn","recognition","continuous","interimResults","lang","onresult","event","interimTranscript","i","resultIndex","results","length","result","onerror","err","error","start","stop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/movne-platform/movne-platform/client/src/RealTimeTranscriptLive.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './RealTimeTranscript.css';\n\nfunction RealTimeTranscript({ onTranscriptUpdate }) {\n  const [transcript, setTranscript] = useState('');\n  const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n  \n  useEffect(() => {\n    if (!SpeechRecognition) {\n      console.warn(\"Web Speech API is not supported in this browser.\");\n      return;\n    }\n    const recognition = new SpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = 'he-IL';\n\n    recognition.onresult = (event) => {\n      let interimTranscript = '';\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const result = event.results[i];\n        interimTranscript += result[0].transcript;\n      }\n      setTranscript(interimTranscript);\n      if (onTranscriptUpdate) {\n        onTranscriptUpdate(interimTranscript);\n      }\n    };\n\n    recognition.onerror = (err) => {\n      console.error(\"Speech recognition error:\", err);\n    };\n\n    recognition.start();\n    return () => recognition.stop();\n  }, [onTranscriptUpdate]);\n\n  return (\n    <div className=\"real-time-transcript\">\n      <h3>תמלול בשידור חי</h3>\n      <pre>{transcript}</pre>\n    </div>\n  );\n}\n\nexport default RealTimeTranscript;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,kBAAkBA,CAAC;EAAEC;AAAmB,CAAC,EAAE;EAAAC,EAAA;EAClD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMS,iBAAiB,GAAGC,MAAM,CAACD,iBAAiB,IAAIC,MAAM,CAACC,uBAAuB;EAEpFV,SAAS,CAAC,MAAM;IACd,IAAI,CAACQ,iBAAiB,EAAE;MACtBG,OAAO,CAACC,IAAI,CAAC,kDAAkD,CAAC;MAChE;IACF;IACA,MAAMC,WAAW,GAAG,IAAIL,iBAAiB,CAAC,CAAC;IAC3CK,WAAW,CAACC,UAAU,GAAG,IAAI;IAC7BD,WAAW,CAACE,cAAc,GAAG,IAAI;IACjCF,WAAW,CAACG,IAAI,GAAG,OAAO;IAE1BH,WAAW,CAACI,QAAQ,GAAIC,KAAK,IAAK;MAChC,IAAIC,iBAAiB,GAAG,EAAE;MAC1B,KAAK,IAAIC,CAAC,GAAGF,KAAK,CAACG,WAAW,EAAED,CAAC,GAAGF,KAAK,CAACI,OAAO,CAACC,MAAM,EAAEH,CAAC,EAAE,EAAE;QAC7D,MAAMI,MAAM,GAAGN,KAAK,CAACI,OAAO,CAACF,CAAC,CAAC;QAC/BD,iBAAiB,IAAIK,MAAM,CAAC,CAAC,CAAC,CAAClB,UAAU;MAC3C;MACAC,aAAa,CAACY,iBAAiB,CAAC;MAChC,IAAIf,kBAAkB,EAAE;QACtBA,kBAAkB,CAACe,iBAAiB,CAAC;MACvC;IACF,CAAC;IAEDN,WAAW,CAACY,OAAO,GAAIC,GAAG,IAAK;MAC7Bf,OAAO,CAACgB,KAAK,CAAC,2BAA2B,EAAED,GAAG,CAAC;IACjD,CAAC;IAEDb,WAAW,CAACe,KAAK,CAAC,CAAC;IACnB,OAAO,MAAMf,WAAW,CAACgB,IAAI,CAAC,CAAC;EACjC,CAAC,EAAE,CAACzB,kBAAkB,CAAC,CAAC;EAExB,oBACEF,OAAA;IAAK4B,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnC7B,OAAA;MAAA6B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBjC,OAAA;MAAA6B,QAAA,EAAMzB;IAAU;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEV;AAAC9B,EAAA,CAxCQF,kBAAkB;AAAAiC,EAAA,GAAlBjC,kBAAkB;AA0C3B,eAAeA,kBAAkB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}