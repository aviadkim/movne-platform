{"ast":null,"code":"var _jsxFileName = \"/workspaces/movne-platform/movne-platform/client/src/RealTimeTranscription.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RealTimeTranscription = ({\n  onTranscriptionComplete\n}) => {\n  _s();\n  const [listening, setListening] = useState(false);\n  const [transcript, setTranscript] = useState(\"\");\n  const recognitionRef = useRef(null);\n  useEffect(() => {\n    // Initialize the Web Speech API\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      alert(\"Web Speech API not supported in this browser.\");\n      return;\n    }\n    const recognition = new SpeechRecognition();\n    recognition.continuous = true; // keep listening until stopped\n    recognition.interimResults = true; // show interim results\n    // You can change the language as needed (e.g., \"he-IL\" for Hebrew)\n    recognition.lang = \"en-US\";\n    recognitionRef.current = recognition;\n    recognition.onresult = event => {\n      let interimTranscript = \"\";\n      let finalTranscript = \"\"; // we'll build this from all final results\n      // Process all results from the event\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const result = event.results[i];\n        if (result.isFinal) {\n          finalTranscript += result[0].transcript + \" \";\n        } else {\n          interimTranscript += result[0].transcript;\n        }\n      }\n      // Combine the final results (that have been confirmed) with the current interim result\n      setTranscript(prev => prev + finalTranscript + interimTranscript);\n    };\n    recognition.onerror = event => {\n      console.error(\"Speech recognition error:\", event.error);\n    };\n    recognition.onend = () => {\n      setListening(false);\n      if (onTranscriptionComplete) {\n        onTranscriptionComplete(transcript);\n      }\n    };\n\n    // Cleanup on unmount\n    return () => {\n      recognition.stop();\n    };\n  }, [onTranscriptionComplete, transcript]);\n  const handleToggle = () => {\n    if (!listening) {\n      // Start recording: clear previous transcript and start the recognition\n      setTranscript(\"\");\n      try {\n        recognitionRef.current.start();\n        setListening(true);\n      } catch (error) {\n        console.error(\"Error starting recognition:\", error);\n      }\n    } else {\n      // Stop recording\n      recognitionRef.current.stop();\n      setListening(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"20px\",\n      padding: \"10px\",\n      border: \"1px solid #ccc\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u05EA\\u05DE\\u05DC\\u05D5\\u05DC \\u05E9\\u05D9\\u05D7\\u05D4 \\u05D1\\u05E9\\u05D9\\u05D3\\u05D5\\u05E8 \\u05D7\\u05D9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleToggle,\n      style: {\n        padding: \"10px 20px\",\n        marginBottom: \"10px\"\n      },\n      children: listening ? \"עצור הקלטה\" : \"התחל הקלטה\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minHeight: \"100px\",\n        border: \"1px solid #eee\",\n        padding: \"10px\",\n        backgroundColor: \"#f9f9f9\",\n        fontFamily: \"Arial, sans-serif\",\n        fontSize: \"14px\"\n      },\n      children: transcript\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(RealTimeTranscription, \"6sTGYYWxnHHP7mB5c2oveSbSO/8=\");\n_c = RealTimeTranscription;\nexport default RealTimeTranscription;\nvar _c;\n$RefreshReg$(_c, \"RealTimeTranscription\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","RealTimeTranscription","onTranscriptionComplete","_s","listening","setListening","transcript","setTranscript","recognitionRef","SpeechRecognition","window","webkitSpeechRecognition","alert","recognition","continuous","interimResults","lang","current","onresult","event","interimTranscript","finalTranscript","i","resultIndex","results","length","result","isFinal","prev","onerror","console","error","onend","stop","handleToggle","start","style","marginTop","padding","border","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginBottom","minHeight","backgroundColor","fontFamily","fontSize","_c","$RefreshReg$"],"sources":["/workspaces/movne-platform/movne-platform/client/src/RealTimeTranscription.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst RealTimeTranscription = ({ onTranscriptionComplete }) => {\n  const [listening, setListening] = useState(false);\n  const [transcript, setTranscript] = useState(\"\");\n  const recognitionRef = useRef(null);\n\n  useEffect(() => {\n    // Initialize the Web Speech API\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      alert(\"Web Speech API not supported in this browser.\");\n      return;\n    }\n    const recognition = new SpeechRecognition();\n    recognition.continuous = true; // keep listening until stopped\n    recognition.interimResults = true; // show interim results\n    // You can change the language as needed (e.g., \"he-IL\" for Hebrew)\n    recognition.lang = \"en-US\"; \n    recognitionRef.current = recognition;\n\n    recognition.onresult = (event) => {\n      let interimTranscript = \"\";\n      let finalTranscript = \"\"; // we'll build this from all final results\n      // Process all results from the event\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const result = event.results[i];\n        if (result.isFinal) {\n          finalTranscript += result[0].transcript + \" \";\n        } else {\n          interimTranscript += result[0].transcript;\n        }\n      }\n      // Combine the final results (that have been confirmed) with the current interim result\n      setTranscript(prev => prev + finalTranscript + interimTranscript);\n    };\n\n    recognition.onerror = (event) => {\n      console.error(\"Speech recognition error:\", event.error);\n    };\n\n    recognition.onend = () => {\n      setListening(false);\n      if (onTranscriptionComplete) {\n        onTranscriptionComplete(transcript);\n      }\n    };\n\n    // Cleanup on unmount\n    return () => {\n      recognition.stop();\n    };\n  }, [onTranscriptionComplete, transcript]);\n\n  const handleToggle = () => {\n    if (!listening) {\n      // Start recording: clear previous transcript and start the recognition\n      setTranscript(\"\");\n      try {\n        recognitionRef.current.start();\n        setListening(true);\n      } catch (error) {\n        console.error(\"Error starting recognition:\", error);\n      }\n    } else {\n      // Stop recording\n      recognitionRef.current.stop();\n      setListening(false);\n    }\n  };\n\n  return (\n    <div style={{ marginTop: \"20px\", padding: \"10px\", border: \"1px solid #ccc\" }}>\n      <h3>תמלול שיחה בשידור חי</h3>\n      <button onClick={handleToggle} style={{ padding: \"10px 20px\", marginBottom: \"10px\" }}>\n        {listening ? \"עצור הקלטה\" : \"התחל הקלטה\"}\n      </button>\n      <div style={{ \n            minHeight: \"100px\", \n            border: \"1px solid #eee\", \n            padding: \"10px\", \n            backgroundColor: \"#f9f9f9\", \n            fontFamily: \"Arial, sans-serif\",\n            fontSize: \"14px\"\n         }}>\n        {transcript}\n      </div>\n    </div>\n  );\n};\n\nexport default RealTimeTranscription;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}