{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useCallback } from 'react';\n\n// Mock data - replace with actual API calls\nconst mockClients = [{\n  id: '001',\n  name: 'ישראל ישראלי',\n  phone: '050-1234567',\n  email: 'israel@example.com',\n  status: 'active',\n  address: 'רחוב הרצל 1, תל אביב',\n  joinDate: '2024-01-01',\n  meetings: [{\n    id: 'm1',\n    type: 'פגישת היכרות',\n    date: '2024-01-15',\n    notes: 'פגישה ראשונית להכרות ובירור צרכים'\n  }],\n  documents: [{\n    id: 'd1',\n    name: 'טופס הצטרפות',\n    type: 'pdf'\n  }]\n}];\nexport const useClientsData = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchClients = useCallback(async () => {\n    setLoading(true);\n    try {\n      // Replace with actual API call\n      return mockClients;\n    } catch (err) {\n      setError(err.message);\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  return {\n    fetchClients,\n    loading,\n    error\n  };\n};\n_s(useClientsData, \"2ijY1OmlH995xMYvzdl3Ke2ANjk=\");\nexport const useClientDetails = () => {\n  _s2();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchClientDetails = useCallback(async clientId => {\n    setLoading(true);\n    try {\n      // Replace with actual API call\n      return mockClients.find(c => c.id === clientId);\n    } catch (err) {\n      setError(err.message);\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  return {\n    fetchClientDetails,\n    loading,\n    error\n  };\n};\n_s2(useClientDetails, \"cmIdxzmzx3g7LJOqtMhWptCKel0=\");","map":{"version":3,"names":["useState","useCallback","mockClients","id","name","phone","email","status","address","joinDate","meetings","type","date","notes","documents","useClientsData","_s","loading","setLoading","error","setError","fetchClients","err","message","useClientDetails","_s2","fetchClientDetails","clientId","find","c"],"sources":["/workspaces/movne-platform/movne-platform/client/src/features/crm/services/clientService.js"],"sourcesContent":["import { useState, useCallback } from 'react';\n\n// Mock data - replace with actual API calls\nconst mockClients = [\n  {\n    id: '001',\n    name: 'ישראל ישראלי',\n    phone: '050-1234567',\n    email: 'israel@example.com',\n    status: 'active',\n    address: 'רחוב הרצל 1, תל אביב',\n    joinDate: '2024-01-01',\n    meetings: [\n      {\n        id: 'm1',\n        type: 'פגישת היכרות',\n        date: '2024-01-15',\n        notes: 'פגישה ראשונית להכרות ובירור צרכים'\n      }\n    ],\n    documents: [\n      {\n        id: 'd1',\n        name: 'טופס הצטרפות',\n        type: 'pdf'\n      }\n    ]\n  }\n];\n\nexport const useClientsData = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchClients = useCallback(async () => {\n    setLoading(true);\n    try {\n      // Replace with actual API call\n      return mockClients;\n    } catch (err) {\n      setError(err.message);\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  return { fetchClients, loading, error };\n};\n\nexport const useClientDetails = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchClientDetails = useCallback(async (clientId) => {\n    setLoading(true);\n    try {\n      // Replace with actual API call\n      return mockClients.find(c => c.id === clientId);\n    } catch (err) {\n      setError(err.message);\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  return { fetchClientDetails, loading, error };\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;;AAE7C;AACA,MAAMC,WAAW,GAAG,CAClB;EACEC,EAAE,EAAE,KAAK;EACTC,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE,aAAa;EACpBC,KAAK,EAAE,oBAAoB;EAC3BC,MAAM,EAAE,QAAQ;EAChBC,OAAO,EAAE,sBAAsB;EAC/BC,QAAQ,EAAE,YAAY;EACtBC,QAAQ,EAAE,CACR;IACEP,EAAE,EAAE,IAAI;IACRQ,IAAI,EAAE,cAAc;IACpBC,IAAI,EAAE,YAAY;IAClBC,KAAK,EAAE;EACT,CAAC,CACF;EACDC,SAAS,EAAE,CACT;IACEX,EAAE,EAAE,IAAI;IACRC,IAAI,EAAE,cAAc;IACpBO,IAAI,EAAE;EACR,CAAC;AAEL,CAAC,CACF;AAED,OAAO,MAAMI,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMqB,YAAY,GAAGpB,WAAW,CAAC,YAAY;IAC3CiB,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF;MACA,OAAOhB,WAAW;IACpB,CAAC,CAAC,OAAOoB,GAAG,EAAE;MACZF,QAAQ,CAACE,GAAG,CAACC,OAAO,CAAC;MACrB,OAAO,EAAE;IACX,CAAC,SAAS;MACRL,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEG,YAAY;IAAEJ,OAAO;IAAEE;EAAM,CAAC;AACzC,CAAC;AAACH,EAAA,CAlBWD,cAAc;AAoB3B,OAAO,MAAMS,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACpC,MAAM,CAACR,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAM0B,kBAAkB,GAAGzB,WAAW,CAAC,MAAO0B,QAAQ,IAAK;IACzDT,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF;MACA,OAAOhB,WAAW,CAAC0B,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC1B,EAAE,KAAKwB,QAAQ,CAAC;IACjD,CAAC,CAAC,OAAOL,GAAG,EAAE;MACZF,QAAQ,CAACE,GAAG,CAACC,OAAO,CAAC;MACrB,OAAO,IAAI;IACb,CAAC,SAAS;MACRL,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEQ,kBAAkB;IAAET,OAAO;IAAEE;EAAM,CAAC;AAC/C,CAAC;AAACM,GAAA,CAlBWD,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}