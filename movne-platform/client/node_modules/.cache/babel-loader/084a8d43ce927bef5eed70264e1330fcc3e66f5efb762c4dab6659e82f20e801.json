{"ast":null,"code":"var _jsxFileName = \"/workspaces/movne-platform/movne-platform/client/src/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport RegulatorySidebar from './components/RegulatorySidebar';\nimport EnhancedTranscript from './components/EnhancedTranscript';\nimport RecordingControls from './components/RecordingControls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [transcript, setTranscript] = useState([]);\n  const [summary, setSummary] = useState('');\n  const [recognition, setRecognition] = useState(null);\n\n  // Use regulatoryAnswers in UI updates\n  const [regulatoryAnswers, setRegulatoryAnswers] = useState({});\n  const handleRegulatoryUpdate = answers => {\n    setRegulatoryAnswers(answers);\n    // Update summary based on regulatory answers\n    if (Object.keys(answers).length > 0) {\n      setSummary(prev => `${prev}\\nRegulatory items completed: ${Object.keys(answers).length}`);\n    }\n  };\n\n  // Use RecordingControls component\n  const handleRecordingStart = () => {\n    setIsRecording(true);\n    recognition === null || recognition === void 0 ? void 0 : recognition.start();\n  };\n  const handleRecordingStop = () => {\n    setIsRecording(false);\n    recognition === null || recognition === void 0 ? void 0 : recognition.stop();\n  };\n\n  // Rest of Dashboard implementation...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-12 gap-3 p-2 h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-span-2 h-full\",\n      children: /*#__PURE__*/_jsxDEV(RegulatorySidebar, {\n        onAnswerUpdate: handleRegulatoryUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-span-8 h-full flex flex-col\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"flex-1 bg-white rounded-xl shadow-lg border border-stone-200 flex flex-col\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-b border-stone-200\",\n          children: /*#__PURE__*/_jsxDEV(RecordingControls, {\n            isRecording: isRecording,\n            onStart: handleRecordingStart,\n            onStop: handleRecordingStop\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"m5XFAb6ZjbMTSzQ9xAJWppirvdo=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","RegulatorySidebar","EnhancedTranscript","RecordingControls","jsxDEV","_jsxDEV","Dashboard","_s","isRecording","setIsRecording","transcript","setTranscript","summary","setSummary","recognition","setRecognition","regulatoryAnswers","setRegulatoryAnswers","handleRegulatoryUpdate","answers","Object","keys","length","prev","handleRecordingStart","start","handleRecordingStop","stop","className","children","onAnswerUpdate","fileName","_jsxFileName","lineNumber","columnNumber","onStart","onStop","_c","$RefreshReg$"],"sources":["/workspaces/movne-platform/movne-platform/client/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport RegulatorySidebar from './components/RegulatorySidebar';\nimport EnhancedTranscript from './components/EnhancedTranscript';\nimport RecordingControls from './components/RecordingControls';\n\nconst Dashboard = () => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [transcript, setTranscript] = useState([]);\n  const [summary, setSummary] = useState('');\n  const [recognition, setRecognition] = useState(null);\n\n  // Use regulatoryAnswers in UI updates\n  const [regulatoryAnswers, setRegulatoryAnswers] = useState({});\n  const handleRegulatoryUpdate = (answers) => {\n    setRegulatoryAnswers(answers);\n    // Update summary based on regulatory answers\n    if (Object.keys(answers).length > 0) {\n      setSummary(prev => `${prev}\\nRegulatory items completed: ${Object.keys(answers).length}`);\n    }\n  };\n\n  // Use RecordingControls component\n  const handleRecordingStart = () => {\n    setIsRecording(true);\n    recognition?.start();\n  };\n\n  const handleRecordingStop = () => {\n    setIsRecording(false);\n    recognition?.stop();\n  };\n\n  // Rest of Dashboard implementation...\n\n  return (\n    <div className=\"grid grid-cols-12 gap-3 p-2 h-screen\">\n      {/* Existing layout... */}\n      <div className=\"col-span-2 h-full\">\n        <RegulatorySidebar onAnswerUpdate={handleRegulatoryUpdate} />\n      </div>\n\n      <div className=\"col-span-8 h-full flex flex-col\">\n        <section className=\"flex-1 bg-white rounded-xl shadow-lg border border-stone-200 flex flex-col\">\n          <div className=\"p-4 border-b border-stone-200\">\n            <RecordingControls \n              isRecording={isRecording}\n              onStart={handleRecordingStart}\n              onStop={handleRecordingStop}\n            />\n          </div>\n          {/* Rest of layout... */}\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}